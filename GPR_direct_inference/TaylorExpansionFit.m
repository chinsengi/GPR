function [fitresult, gof] = TaylorExpansionFit(xobserved, yobserved, zobserved)
%CREATEFIT(XOBSERVED,YOBSERVED,ZOBSERVED)
%  Create a fit.
%
%  Data for 'TaylorExpansionFit' fit:
%      X Input : xobserved
%      Y Input : yobserved
%      Z Output: zobserved
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 05-Mar-2021 13:53:12


%% Fit: 'TaylorExpansionFit'.
[xData, yData, zData] = prepareSurfaceData( xobserved, yobserved, zobserved );

% Set up fittype and options.
%ft = fittype( 'c00+c10*x+c01*y+c11*x*y+c12*x*(y^2)+c21*(x^2)*y+c22*(x^2)*(y^2)', 'independent', {'x', 'y'}, 'dependent', 'z' );
ft = fittype( 'c00+c10*x+c01*y+c02*(y^2)+c20*(x^2)+c11*x*y+c12*x*(y^2)+c21*(x^2)*y+c22*(x^2)*(y^2)', 'independent', {'x', 'y'}, 'dependent', 'z' );
opts = fitoptions( 'Method', 'NonlinearLeastSquares' );
opts.Display = 'Off';
%rng(10);
opts.StartPoint = rand(1,9);%[0.489655345328471 0.972852237010803 0.748489909977082 0.567841149738807 0.298964163457197 0.256109781061838 0.886563794411547];

% Fit model to data.
[fitresult, gof] = fit( [xData, yData], zData, ft, opts );

% Plot fit with data.
% figure( 'Name', 'TaylorExpansionFit' );
% h = plot( fitresult, [xData, yData], zData );
% legend( h, 'TaylorExpansionFit', 'zobserved vs. xobserved, yobserved', 'Location', 'NorthEast', 'Interpreter', 'none' );
% % Label axes
% xlabel( 'xobserved', 'Interpreter', 'none' );
% ylabel( 'yobserved', 'Interpreter', 'none' );
% zlabel( 'zobserved', 'Interpreter', 'none' );
% grid on
% view( -46.0, 12.8 );


